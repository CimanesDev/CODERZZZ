{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Documents\\\\Computer Science\\\\HACKATHON\\\\bluehacks\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { GoogleMap, Marker, useLoadScript, Autocomplete } from '@react-google-maps/api';\nimport axios from 'axios';\nimport Popup from './Popup';\nimport DonationPopup from './DonationPopup';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  isCallForHelpMode,\n  setIsCallForHelpMode,\n  isDonateGoodsMode,\n  setIsDonateGoodsMode,\n  pins,\n  setPins\n}) => {\n  _s();\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [showDonationPopup, setShowDonationPopup] = useState(false);\n  const [isLocationConfirmed, setIsLocationConfirmed] = useState(false);\n  const [selectedPin, setSelectedPin] = useState(null);\n  const [address, setAddress] = useState('');\n  const [donationDetails, setDonationDetails] = useState({\n    goods: '',\n    quantity: ''\n  });\n  const [mapCenter, setMapCenter] = useState(null); // Start with null, set to user's location\n  const [nearbyResources, setNearbyResources] = useState([]);\n  const [showResourceLocator, setShowResourceLocator] = useState(false);\n  const autocompleteRef = useRef(null);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8',\n    // Replace with your API key\n    libraries: ['places']\n  });\n\n  // Fetch nearby resources (hospitals, shelters, etc.)\n  const fetchNearbyResources = async location => {\n    try {\n      console.log('Fetching resources for location:', location); // Debugging\n      const response = await axios.post('https://places.googleapis.com/v1/places:searchNearby', {\n        includedTypes: ['hospital', 'shelter', 'food'],\n        maxResultCount: 10,\n        locationRestriction: {\n          circle: {\n            center: {\n              latitude: location.lat,\n              longitude: location.lng\n            },\n            radius: 10000\n          }\n        }\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Goog-Api-Key': 'AIzaSyD9Pv5Xc59EXeqZj_ZBkwvwzrDQt4_A4KI',\n          'X-Goog-FieldMask': 'places.displayName'\n        }\n      });\n      console.log('API Response:', response.data); // Debugging\n      if (response.data.status === \"OK\") {\n        setNearbyResources(response.data.results);\n      } else {\n        console.error('API Error:', response.data.error_message || response.data.status);\n      }\n    } catch (error) {\n      console.error('Error fetching nearby resources:', error);\n    }\n  };\n\n  // Get the user's current location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        console.log('User Location:', userLocation); // Debugging\n        setMarkerPosition(userLocation);\n        setMapCenter(userLocation); // Center the map on the user's location\n        fetchAddress(userLocation);\n\n        // If in \"Donate Goods\" mode, show the donation popup immediately\n        if (isDonateGoodsMode) {\n          setShowDonationPopup(true);\n        }\n      }, error => {\n        console.error('Error getting user location:', error);\n        // Fallback to a default location if user denies location access\n        setMapCenter({\n          lat: 14,\n          lng: 482\n        });\n      });\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n      // Fallback to a default location if geolocation is not supported\n      setMapCenter({\n        lat: 14,\n        lng: 482\n      });\n    }\n  }, [isCallForHelpMode, isDonateGoodsMode]);\n\n  // Fetch address from coordinates\n  const fetchAddress = async position => {\n    try {\n      const response = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.lat},${position.lng}&key=AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8`);\n      if (response.data.results[0]) {\n        setAddress(response.data.results[0].formatted_address);\n      }\n    } catch (error) {\n      console.error('Error fetching address:', error);\n    }\n  };\n\n  // Handle map clicks (only for call for help mode)\n  const handleMapClick = event => {\n    if (isCallForHelpMode && !isLocationConfirmed) {\n      const newPosition = {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      };\n      setMarkerPosition(newPosition);\n      setMapCenter(newPosition); // Center the map on the clicked position\n      fetchAddress(newPosition);\n    }\n  };\n\n  // Handle address search\n  const onPlaceChanged = () => {\n    if (autocompleteRef.current) {\n      const place = autocompleteRef.current.getPlace();\n      if (place.geometry) {\n        const newPosition = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        };\n        setMarkerPosition(newPosition);\n        setMapCenter(newPosition); // Center the map on the searched location\n        setAddress(place.formatted_address);\n      }\n    }\n  };\n\n  // Handle disaster selection\n  const handleSelectDisaster = disasterType => {\n    if (markerPosition) {\n      const newPin = {\n        id: Date.now(),\n        position: markerPosition,\n        type: 'help',\n        // Pin type: help or donation\n        disasterType: disasterType,\n        address: address\n      };\n      setPins(prevPins => [...prevPins, newPin]);\n      setShowPopup(false);\n      setIsLocationConfirmed(true);\n      setMarkerPosition(null);\n      setAddress('');\n      setIsCallForHelpMode(false);\n    }\n  };\n\n  // Handle donation submission\n  const handleDonationSubmit = () => {\n    if (markerPosition) {\n      const newPin = {\n        id: Date.now(),\n        position: markerPosition,\n        type: 'donation',\n        // Pin type: help or donation\n        address: address,\n        goods: donationDetails.goods,\n        quantity: donationDetails.quantity\n      };\n      setPins(prevPins => [...prevPins, newPin]);\n      setShowDonationPopup(false);\n      setMarkerPosition(null);\n      setAddress('');\n      setIsDonateGoodsMode(false);\n    }\n  };\n\n  // Handle pin deletion\n  const handleDeletePin = pinId => {\n    setPins(prevPins => prevPins.filter(pin => pin.id !== pinId));\n    setSelectedPin(null);\n  };\n\n  // Handle pin selection\n  const handlePinClick = pin => {\n    setSelectedPin(pin);\n    setMapCenter(pin.position); // Center the map on the clicked pin\n  };\n\n  // Ensure only one mode is active at a time\n  useEffect(() => {\n    if (isCallForHelpMode) {\n      setIsDonateGoodsMode(false);\n    } else if (isDonateGoodsMode) {\n      setIsCallForHelpMode(false);\n    }\n  }, [isCallForHelpMode, isDonateGoodsMode, setIsCallForHelpMode, setIsDonateGoodsMode]);\n\n  // Render nearby resources as markers\n  const renderResourceMarkers = () => {\n    console.log('Rendering Resource Markers:', nearbyResources); // Debugging\n    return nearbyResources.map(resource => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: resource.geometry.location.lat(),\n        lng: resource.geometry.location.lng()\n      },\n      icon: {\n        url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png' // Custom icon for resources\n      },\n      onClick: () => {\n        setSelectedPin({\n          id: resource.place_id,\n          position: {\n            lat: resource.geometry.location.lat(),\n            lng: resource.geometry.location.lng()\n          },\n          name: resource.name,\n          address: resource.vicinity,\n          type: 'resource'\n        });\n      }\n    }, resource.place_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this));\n  };\n  if (!isLoaded || !mapCenter) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 39\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      zoom: 12,\n      center: mapCenter,\n      mapContainerStyle: {\n        width: '100%',\n        height: '100vh'\n      },\n      onClick: isCallForHelpMode && !isLocationConfirmed ? handleMapClick : undefined,\n      children: [pins.map(pin => /*#__PURE__*/_jsxDEV(Marker, {\n        position: pin.position,\n        onClick: () => handlePinClick(pin),\n        icon: {\n          url: pin.type === 'donation' ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png' : 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n        }\n      }, pin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)), showResourceLocator && renderResourceMarkers(), isCallForHelpMode && !isDonateGoodsMode && markerPosition && !isLocationConfirmed && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition,\n        draggable: true,\n        onDragEnd: event => {\n          const newPosition = {\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n          };\n          setMarkerPosition(newPosition);\n          setMapCenter(newPosition); // Center the map on the dragged position\n          fetchAddress(newPosition);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        onLoad: autocomplete => autocompleteRef.current = autocomplete,\n        onPlaceChanged: onPlaceChanged,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Search for an address\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"confirm\",\n      onClick: () => setShowPopup(true),\n      children: \"Confirm Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"resource-locator-button\",\n      onClick: () => {\n        console.log('Resource Locator Button Clicked'); // Debugging\n        setShowResourceLocator(!showResourceLocator);\n        if (!showResourceLocator && markerPosition) {\n          fetchNearbyResources(markerPosition); // Fetch resources when button is clicked\n        }\n      },\n      children: showResourceLocator ? 'Hide Resources' : 'Find Nearby Resources'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n      onSelectDisaster: handleSelectDisaster,\n      onClose: () => setShowPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), showDonationPopup && /*#__PURE__*/_jsxDEV(DonationPopup, {\n      address: address,\n      onConfirm: handleDonationSubmit,\n      onClose: () => setShowDonationPopup(false),\n      donationDetails: donationDetails,\n      setDonationDetails: setDonationDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), selectedPin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pin-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedPin.type === 'resource' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedPin.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this), \" at \", selectedPin.address, \".\"]\n        }, void 0, true) : selectedPin.type === 'donation' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Donation at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedPin.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this), \" with\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedPin.goods\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), \" (Quantity: \", selectedPin.quantity, \").\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Help asked at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedPin.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 31\n          }, this), \" with\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedPin.disasterType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), \".\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeletePin(selectedPin.id),\n        children: \"Delete Pin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedPin(null),\n        children: \"Okay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Map, \"h+H/dH+jlr3SDpj4NNqkORh4jOM=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GoogleMap","Marker","useLoadScript","Autocomplete","axios","Popup","DonationPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","isCallForHelpMode","setIsCallForHelpMode","isDonateGoodsMode","setIsDonateGoodsMode","pins","setPins","_s","markerPosition","setMarkerPosition","showPopup","setShowPopup","showDonationPopup","setShowDonationPopup","isLocationConfirmed","setIsLocationConfirmed","selectedPin","setSelectedPin","address","setAddress","donationDetails","setDonationDetails","goods","quantity","mapCenter","setMapCenter","nearbyResources","setNearbyResources","showResourceLocator","setShowResourceLocator","autocompleteRef","isLoaded","googleMapsApiKey","libraries","fetchNearbyResources","location","console","log","response","post","includedTypes","maxResultCount","locationRestriction","circle","center","latitude","lat","longitude","lng","radius","headers","data","status","results","error","error_message","navigator","geolocation","getCurrentPosition","position","userLocation","coords","fetchAddress","get","formatted_address","handleMapClick","event","newPosition","latLng","onPlaceChanged","current","place","getPlace","geometry","handleSelectDisaster","disasterType","newPin","id","Date","now","type","prevPins","handleDonationSubmit","handleDeletePin","pinId","filter","pin","handlePinClick","renderResourceMarkers","map","resource","icon","url","onClick","place_id","name","vicinity","fileName","_jsxFileName","lineNumber","columnNumber","children","zoom","mapContainerStyle","width","height","undefined","draggable","onDragEnd","className","onLoad","autocomplete","placeholder","value","onChange","e","target","onSelectDisaster","onClose","onConfirm","_c","$RefreshReg$"],"sources":["C:/Users/Josh/Documents/Computer Science/HACKATHON/bluehacks/src/components/Map.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { GoogleMap, Marker, useLoadScript, Autocomplete } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\nimport Popup from './Popup';\r\nimport DonationPopup from './DonationPopup';\r\nimport './Map.css';\r\n\r\nconst Map = ({\r\n  isCallForHelpMode,\r\n  setIsCallForHelpMode,\r\n  isDonateGoodsMode,\r\n  setIsDonateGoodsMode,\r\n  pins,\r\n  setPins,\r\n}) => {\r\n  const [markerPosition, setMarkerPosition] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [showDonationPopup, setShowDonationPopup] = useState(false);\r\n  const [isLocationConfirmed, setIsLocationConfirmed] = useState(false);\r\n  const [selectedPin, setSelectedPin] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [donationDetails, setDonationDetails] = useState({ goods: '', quantity: '' });\r\n  const [mapCenter, setMapCenter] = useState(null); // Start with null, set to user's location\r\n  const [nearbyResources, setNearbyResources] = useState([]);\r\n  const [showResourceLocator, setShowResourceLocator] = useState(false);\r\n  const autocompleteRef = useRef(null);\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: 'AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8', // Replace with your API key\r\n    libraries: ['places'],\r\n  });\r\n\r\n  // Fetch nearby resources (hospitals, shelters, etc.)\r\n  const fetchNearbyResources = async (location) => {\r\n    try {\r\n      console.log('Fetching resources for location:', location); // Debugging\r\n      const response = await axios.post(\r\n        'https://places.googleapis.com/v1/places:searchNearby',\r\n        {\r\n          includedTypes: ['hospital', 'shelter', 'food'],\r\n          maxResultCount: 10,\r\n          locationRestriction: {\r\n            circle: {\r\n              center: {\r\n                latitude: location.lat,\r\n                longitude: location.lng\r\n              },\r\n              radius: 10000\r\n            }\r\n          }\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-Goog-Api-Key': 'AIzaSyD9Pv5Xc59EXeqZj_ZBkwvwzrDQt4_A4KI',\r\n            'X-Goog-FieldMask': 'places.displayName'\r\n          }\r\n        }\r\n      );\r\n      console.log('API Response:', response.data); // Debugging\r\n      if (response.data.status === \"OK\") {\r\n        setNearbyResources(response.data.results);\r\n      } else {\r\n        console.error('API Error:', response.data.error_message || response.data.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching nearby resources:', error);\r\n    }\r\n  };\r\n\r\n  // Get the user's current location\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const userLocation = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          };\r\n          console.log('User Location:', userLocation); // Debugging\r\n          setMarkerPosition(userLocation);\r\n          setMapCenter(userLocation); // Center the map on the user's location\r\n          fetchAddress(userLocation);\r\n\r\n          // If in \"Donate Goods\" mode, show the donation popup immediately\r\n          if (isDonateGoodsMode) {\r\n            setShowDonationPopup(true);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error getting user location:', error);\r\n          // Fallback to a default location if user denies location access\r\n          setMapCenter({ lat: 14, lng: 482 });\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Geolocation is not supported by this browser.');\r\n      // Fallback to a default location if geolocation is not supported\r\n      setMapCenter({ lat: 14, lng: 482 });\r\n    }\r\n  }, [isCallForHelpMode, isDonateGoodsMode]);\r\n\r\n  // Fetch address from coordinates\r\n  const fetchAddress = async (position) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.lat},${position.lng}&key=AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8`\r\n      );\r\n      if (response.data.results[0]) {\r\n        setAddress(response.data.results[0].formatted_address);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching address:', error);\r\n    }\r\n  };\r\n\r\n  // Handle map clicks (only for call for help mode)\r\n  const handleMapClick = (event) => {\r\n    if (isCallForHelpMode && !isLocationConfirmed) {\r\n      const newPosition = {\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng(),\r\n      };\r\n      setMarkerPosition(newPosition);\r\n      setMapCenter(newPosition); // Center the map on the clicked position\r\n      fetchAddress(newPosition);\r\n    }\r\n  };\r\n\r\n  // Handle address search\r\n  const onPlaceChanged = () => {\r\n    if (autocompleteRef.current) {\r\n      const place = autocompleteRef.current.getPlace();\r\n      if (place.geometry) {\r\n        const newPosition = {\r\n          lat: place.geometry.location.lat(),\r\n          lng: place.geometry.location.lng(),\r\n        };\r\n        setMarkerPosition(newPosition);\r\n        setMapCenter(newPosition); // Center the map on the searched location\r\n        setAddress(place.formatted_address);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle disaster selection\r\n  const handleSelectDisaster = (disasterType) => {\r\n    if (markerPosition) {\r\n      const newPin = {\r\n        id: Date.now(),\r\n        position: markerPosition,\r\n        type: 'help', // Pin type: help or donation\r\n        disasterType: disasterType,\r\n        address: address,\r\n      };\r\n      setPins((prevPins) => [...prevPins, newPin]);\r\n      setShowPopup(false);\r\n      setIsLocationConfirmed(true);\r\n      setMarkerPosition(null);\r\n      setAddress('');\r\n      setIsCallForHelpMode(false);\r\n    }\r\n  };\r\n\r\n  // Handle donation submission\r\n  const handleDonationSubmit = () => {\r\n    if (markerPosition) {\r\n      const newPin = {\r\n        id: Date.now(),\r\n        position: markerPosition,\r\n        type: 'donation', // Pin type: help or donation\r\n        address: address,\r\n        goods: donationDetails.goods,\r\n        quantity: donationDetails.quantity,\r\n      };\r\n      setPins((prevPins) => [...prevPins, newPin]);\r\n      setShowDonationPopup(false);\r\n      setMarkerPosition(null);\r\n      setAddress('');\r\n      setIsDonateGoodsMode(false);\r\n    }\r\n  };\r\n\r\n  // Handle pin deletion\r\n  const handleDeletePin = (pinId) => {\r\n    setPins((prevPins) => prevPins.filter((pin) => pin.id !== pinId));\r\n    setSelectedPin(null);\r\n  };\r\n\r\n  // Handle pin selection\r\n  const handlePinClick = (pin) => {\r\n    setSelectedPin(pin);\r\n    setMapCenter(pin.position); // Center the map on the clicked pin\r\n  };\r\n\r\n  // Ensure only one mode is active at a time\r\n  useEffect(() => {\r\n    if (isCallForHelpMode) {\r\n      setIsDonateGoodsMode(false);\r\n    } else if (isDonateGoodsMode) {\r\n      setIsCallForHelpMode(false);\r\n    }\r\n  }, [isCallForHelpMode, isDonateGoodsMode, setIsCallForHelpMode, setIsDonateGoodsMode]);\r\n\r\n  // Render nearby resources as markers\r\n  const renderResourceMarkers = () => {\r\n    console.log('Rendering Resource Markers:', nearbyResources); // Debugging\r\n    return nearbyResources.map((resource) => (\r\n      <Marker\r\n        key={resource.place_id}\r\n        position={{\r\n          lat: resource.geometry.location.lat(),\r\n          lng: resource.geometry.location.lng(),\r\n        }}\r\n        icon={{\r\n          url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png', // Custom icon for resources\r\n        }}\r\n        onClick={() => {\r\n          setSelectedPin({\r\n            id: resource.place_id,\r\n            position: {\r\n              lat: resource.geometry.location.lat(),\r\n              lng: resource.geometry.location.lng(),\r\n            },\r\n            name: resource.name,\r\n            address: resource.vicinity,\r\n            type: 'resource',\r\n          });\r\n        }}\r\n      />\r\n    ));\r\n  };\r\n\r\n  if (!isLoaded || !mapCenter) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <>\r\n      <GoogleMap\r\n        zoom={12}\r\n        center={mapCenter}\r\n        mapContainerStyle={{ width: '100%', height: '100vh' }}\r\n        onClick={isCallForHelpMode && !isLocationConfirmed ? handleMapClick : undefined}\r\n      >\r\n        {/* Render all pins */}\r\n        {pins.map((pin) => (\r\n          <Marker\r\n            key={pin.id}\r\n            position={pin.position}\r\n            onClick={() => handlePinClick(pin)}\r\n            icon={{\r\n              url: pin.type === 'donation' ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png' : 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {/* Render nearby resources */}\r\n        {showResourceLocator && renderResourceMarkers()}\r\n\r\n        {/* Render the current marker (if not confirmed yet) */}\r\n        {isCallForHelpMode && !isDonateGoodsMode && markerPosition && !isLocationConfirmed && (\r\n          <Marker\r\n            position={markerPosition}\r\n            draggable={true}\r\n            onDragEnd={(event) => {\r\n              const newPosition = {\r\n                lat: event.latLng.lat(),\r\n                lng: event.latLng.lng(),\r\n              };\r\n              setMarkerPosition(newPosition);\r\n              setMapCenter(newPosition); // Center the map on the dragged position\r\n              fetchAddress(newPosition);\r\n            }}\r\n          />\r\n        )}\r\n      </GoogleMap>\r\n\r\n      {/* Search Bar */}\r\n      {isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && (\r\n        <div className=\"search\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (autocompleteRef.current = autocomplete)}\r\n            onPlaceChanged={onPlaceChanged}\r\n          >\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Search for an address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </Autocomplete>\r\n        </div>\r\n      )}\r\n\r\n      {/* Confirm Location Button */}\r\n      {isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && (\r\n        <button className=\"confirm\" onClick={() => setShowPopup(true)}>\r\n          Confirm Location\r\n        </button>\r\n      )}\r\n\r\n      {/* Resource Locator Button */}\r\n      <button\r\n        className=\"resource-locator-button\"\r\n        onClick={() => {\r\n          console.log('Resource Locator Button Clicked'); // Debugging\r\n          setShowResourceLocator(!showResourceLocator);\r\n          if (!showResourceLocator && markerPosition) {\r\n            fetchNearbyResources(markerPosition); // Fetch resources when button is clicked\r\n          }\r\n        }}\r\n      >\r\n        {showResourceLocator ? 'Hide Resources' : 'Find Nearby Resources'}\r\n      </button>\r\n\r\n      {/* Popup for disaster selection */}\r\n      {showPopup && (\r\n        <Popup\r\n          onSelectDisaster={handleSelectDisaster}\r\n          onClose={() => setShowPopup(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Popup for donation details */}\r\n      {showDonationPopup && (\r\n        <DonationPopup\r\n          address={address}\r\n          onConfirm={handleDonationSubmit}\r\n          onClose={() => setShowDonationPopup(false)}\r\n          donationDetails={donationDetails}\r\n          setDonationDetails={setDonationDetails}\r\n        />\r\n      )}\r\n\r\n      {/* Pin details when a pin is selected */}\r\n      {selectedPin && (\r\n        <div className=\"pin-details\">\r\n          <p>\r\n            {selectedPin.type === 'resource' ? (\r\n              <>\r\n                <strong>{selectedPin.name}</strong> at {selectedPin.address}.\r\n              </>\r\n            ) : selectedPin.type === 'donation' ? (\r\n              <>\r\n                Donation at <strong>{selectedPin.address}</strong> with{\" \"}\r\n                <strong>{selectedPin.goods}</strong> (Quantity: {selectedPin.quantity}).\r\n              </>\r\n            ) : (\r\n              <>\r\n                Help asked at <strong>{selectedPin.address}</strong> with{\" \"}\r\n                <strong>{selectedPin.disasterType}</strong>.\r\n              </>\r\n            )}\r\n          </p>\r\n          <button onClick={() => handleDeletePin(selectedPin.id)}>Delete Pin</button>\r\n          <button onClick={() => setSelectedPin(null)}>Okay</button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};  \r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}